@model object

@{
    ViewBag.Title = "Dashbord";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    object listDate = ViewBag.ListLabel as object;
    object listMoney = ViewBag.ListData as object;
    var xLabels = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.xLabels);
    var yValues = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.yValues);
    var y2Values = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.y2Values);
}

<!DOCTYPE html>

<div class="row">
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-info">
            <div class="inner">
                <h3>150</h3>
                <p>Product New</p>
            </div>
            <div class="icon">
                <i class="ion ion-bag"></i>
            </div>
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-success">
            <div class="inner">
                <h3>85<sup style="font-size: 20px">%</sup></h3>

                <p>Sales Product</p>
            </div>
            <div class="icon">
                <i class="ion ion-stats-bars"></i>
            </div>
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-warning">
            <div class="inner">
                <h3>44</h3>

                <p>Customer</p>
            </div>
            <div class="icon">
                <i class="ion ion-ios-people"></i>
            </div>
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-danger">
            <div class="inner">
                <h3>0</h3>
                <p>Favorite goods</p>
            </div>
            <div class="icon">
                <i class="ion ion-email-unread"></i>
            </div>
        </div>
    </div>
    <!-- ./col -->
</div>

<div class="col-12 no-print">
    <div class="card card-info">
        <div class="card-header">
            <h3 class="card-title">
                Statistical chart
            </h3>
            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-widget="collapse">
                    <i class="fas fa-minus"></i>
                </button>
                <button type="button" class="btn btn-tool" data-widget="remove"><i class="fas fa-times"></i></button>
            </div>
        </div>
        <div class="card-body">
            <div class="chart">
                <canvas id="chart" style="height:500px"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="col-12">
    <div class="card">
        <div class="card-header">

            <h3 class="card-title">Revenue Dashboard</h3>
        </div>
        <!-- /.card-header -->

        <div class="card-body">
            <div class="container-fluid">
                <div class="row">
                    <section class="col-lg-12 connectedSortable">
                        <div class="card bg-gradient-info">
                            <div class="card-header no-border">
                                <h3 class="card-title">
                                    <a href="#" class=" dropdown fas fa-th mr-1"></a>
                                    Dashboard
                                </h3>
                            </div>
                            <div class="card-body">
                                <canvas class="chart" id="line-chart" style="height: 250px;"></canvas>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        var salesGraphChartCanvas = $('#line-chart').get(0).getContext('2d');
        var listLabel = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(listDate))');
        var listData = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(listMoney))');
        var salesGraphChartData = {
            labels: listLabel,
            datasets: [
                {
                    label: 'Digital Goods',
                    fill: false,
                    borderWidth: 2,
                    lineTension: 0,
                    spanGaps: true,
                    borderColor: '#efefef',
                    pointRadius: 3,
                    pointHoverRadius: 7,
                    pointColor: '#efefef',
                    pointBackgroundColor: '#efefef',
                    data: listData,
                }
            ]
        }

        var salesGraphChartOptions = {
            maintainAspectRatio: false,
            responsive: true,
            legend: {
                display: false
            },
            scales: {
                xAxes: [
                    {
                        ticks: {
                            fontColor: '#efefef'
                        },
                        gridLines: {
                            display: false,
                            color: '#efefef',
                            drawBorder: false
                        }
                    }
                ],
                yAxes: [
                    {
                        ticks: {
                            stepSize: 5000,
                            fontColor: '#efefef'
                        },
                        gridLines: {
                            display: true,
                            color: '#efefef',
                            drawBorder: false
                        }
                    }
                ]
            }
        }

        // This will get the first returned node in the jQuery collection.
        var salesGraphChart = new Chart(salesGraphChartCanvas,
            {
                type: 'line',
                data: salesGraphChartData,
                options: salesGraphChartOptions
            }
        );
    </script>

    <script>
        $(function () {

            //Date range picker
            $('#dateFilter').daterangepicker(
                {
                    autoUpdateInput: false,
                    singleDatePicker: true,
                    locale: 'vi'
                }, function (chosenDate) {
                    $('#dateFilter').val(chosenDate.format('DD/MM/YYYY'));
                });
        })
    </script>
    <script type="text/javascript">
        $(function () {
            $('#monthFilter').datetimepicker({
                viewMode: 'years',
                format: 'MM/YYYY',
                locale: 'vi'
            });
        });
    </script>
    <script type="text/javascript">
        $(function () {
            $('#yearFilter').datetimepicker({
                viewMode: 'years',
                format: 'YYYY',
                locale: 'vi'
            });
        });
    </script>
    <script>

        $(function () {
            GetReport();
        });
        $('#btnSearch').on('click',
            function (e) {
                var dateModel = {
                    nameProduct: $('#nameProductFilter').val(),
                    endDate: $('#dateFilter').val(),
                    monthDate: $('#monthFilter').val(),
                    yearDate: $('#yearFilter').val()
                };
                GetReport(dateModel);
            });

        function GetReport(dateModel) {
            $.ajax({
                url: '/Admin/Home/FilterReport',
                type: 'POST',
                cache: false,
                async: true,
                dataType: "html",
                data: dateModel
            })
                .done(function (result) {
                    $('#loadReport').html(result);
                }).fail(function (xhr) {
                    console.log('error : ' + xhr.status + ' - ' + xhr.statusText + ' - ' + xhr.responseText);
                });
        }
    </script>

    <script type="text/javascript">
        $(function () {
    var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(xLabels),
                datasets: [
                  {
                    label               : 'Buys',
                    backgroundColor     : 'rgba(60,141,188,0.9)',
                    borderColor         : 'rgba(60,141,188,0.8)',
                    pointRadius          : false,
                    pointColor          : '#3b8bba',
                    pointStrokeColor    : 'rgba(60,141,188,1)',
                    pointHighlightFill  : '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data                : @Html.Raw(yValues),
                  },
                  {
                    label               : 'Views',
                    backgroundColor     : 'rgba(210, 214, 222, 1)',
                    borderColor         : 'rgba(210, 214, 222, 1)',
                    pointRadius         : false,
                    pointColor          : 'rgba(210, 214, 222, 1)',
                    pointStrokeColor    : '#c1c7d1',
                    pointHighlightFill  : '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data                : @Html.Raw(y2Values),
                  }
                ]
            };

var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true,

                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]

                },
                tooltips: {

                }

            };
           var myChart = new  Chart(ctx, {
                    options: options,
                    data: data,
                    type:'bar'
                });
            });
    </script>
}

